plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.kjs990114'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }

}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.0'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'mysql:mysql-connector-java:8.0.32'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    implementation platform("org.springframework.ai:spring-ai-bom:0.8.1-SNAPSHOT")
	implementation("com.googlecode.json-simple:json-simple:1.1.1")


    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

// def webappDir = "$projectDir/src/main/frontend"

bootJar {
    mainClass = 'com.kjs990114.goodong.GoodongApplication'
}

sourceSets {
    main {
        resources {
            srcDirs = ["$projectDir/src/main/resources"]
        }
    }
}

// processResources {
//     dependsOn "copyWebApp"
// }


// task copyWebApp(type: Copy) {
//     dependsOn "buildReact"
//     from "$webappDir/build"
//     into "$projectDir/src/main/resources/static"
// }


// task buildReact(type: Exec) {
//     dependsOn "installReact"
//     workingDir "$webappDir"
//     inputs.dir "$webappDir"
//     group = BasePlugin.BUILD_GROUP
//     if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
//         commandLine "npm.cmd", "run-script", "build"
//     } else {
//         commandLine "npm", "run-script", "build"
//     }
// }

// task installReact(type: Exec) {
//     workingDir "$webappDir"
//     inputs.dir "$webappDir"
//     group = BasePlugin.BUILD_GROUP
//     if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
//         commandLine "npm.cmd", "audit", "fix"
//         commandLine 'npm.cmd', 'install'
//     } else {
//         commandLine "npm", "audit", "fix"
//         commandLine 'npm', 'install'
//     }
// }

